<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <bean id="duke" class="com.code4j.springinaction.springidol.Juggler">
        <constructor-arg value="15"/>
    </bean>
    <bean id="poeticDuke" class="com.code4j.springinaction.springidol.PoeticJuggler">
        <constructor-arg value="15"/>
        <constructor-arg ref="sonnet29"/>
    </bean>
    <bean id="sonnet29" class="com.code4j.springinaction.springidol.Sonnet29"/>

    <bean id="stage" class="com.code4j.springinaction.springidol.Stage" factory-method="getInstance"/>

    <bean id="auditorium" class="com.code4j.springinaction.springidol.Auditorium" init-method="turnOnLights"
          destroy-method="turnOffLights"/>

    <bean id="kenny" class="com.code4j.springinaction.springidol.Instrumentalist">
        <property name="song" value="Jingle Bells"/>
        <property name="age" value="37"/>
    </bean>

    <bean id="kenny2" class="com.code4j.springinaction.springidol.Instrumentalist">
        <property name="song" value="Jingle Bells"/>
        <property name="instrument" ref="saxophone"/>
    </bean>

    <bean id="kenny5" class="com.code4j.springinaction.springidol.Instrumentalist" autowire="byName">
        <property name="song" value="Jingle Bells"/>
        <!--<property name="instrument" ref="saxophone"/>-->
    </bean>

    <bean id="instrument" class="com.code4j.springinaction.springidol.Saxophone"/>
    <bean id="saxophone" class="com.code4j.springinaction.springidol.Saxophone"/>
    <bean id="piano" class="com.code4j.springinaction.springidol.Piano"/>


    <bean id="kenny3" class="com.code4j.springinaction.springidol.Instrumentalist">
        <property name="song" value="Jingle Bells"/>
        <property name="instrument">
            <bean class="com.code4j.springinaction.springidol.Saxophone"/>
        </property>
    </bean>


    <bean id="kenny4" class="com.code4j.springinaction.springidol.Instrumentalist" p:song="Jingle Bells"
          p:instrument-ref="saxophone">
    </bean>
    <bean id="hank" class="com.code4j.springinaction.springidol.OnemanBand">
        <property name="instruments">
            <list>
                <ref bean="guitar"/>
                <ref bean="cymbal"/>
                <ref bean="harmonica"/>
            </list>
        </property>
    </bean>
    <bean id="hank1" class="com.code4j.springinaction.springidol.OnemanBand">
        <property name="instruments">
            <set>
                <ref bean="guitar"/>
                <ref bean="cymbal"/>
                <ref bean="harmonica"/>
                <ref bean="harmonica"/>
            </set>
        </property>
    </bean>
    <bean id="guitar" class="com.code4j.springinaction.springidol.Guitar"/>
    <bean id="cymbal" class="com.code4j.springinaction.springidol.Cymbal"/>
    <bean id="harmonica" class="com.code4j.springinaction.springidol.Harmonica"/>

    <bean id="audience" class="com.code4j.springinaction.springidol.Audience"/>
    <!--<bean id="magician" class="com.code4j.springinaction.springidol.Magician"/>-->

    <!-- <aop:config>
         <aop:aspect ref="audience">
             <aop:pointcut id="performance"
                           expression="execution(* com.code4j.springinaction.springidol.Performer.perform(..))"/>
             <aop:before pointcut-ref="performance" method="takeSeats"/>
             <aop:before method="turnOffCellPhones" pointcut-ref="performance"/>
             <aop:after-returning method="applaud" pointcut-ref="performance"/>
             <aop:after-throwing method="demandRefund" pointcut-ref="performance"/>
         </aop:aspect>
     </aop:config>-->

    <context:annotation-config/>
    <context:component-scan base-package="com.code4j.springinaction.springidol"></context:component-scan>

    <!--<aop:config>
        <aop:aspect ref="audience">
            <aop:pointcut id="performance2"
                          expression="execution(* com.code4j.springinaction.springidol.Performer.perform(..))"/>
            <aop:around method="watchPerformance" pointcut-ref="performance2"/>
        </aop:aspect>
    </aop:config>

    <aop:config>
        <aop:aspect ref="magician">
            <aop:pointcut id="thinking" expression="execution(* com.code4j.springinaction.springidol.Thinker.thinkOfSomething(String)) and args(thoughts)"/>
            <aop:before method="interceptThoughts" pointcut-ref="thinking" arg-names="thoughts"/>
        </aop:aspect>
    </aop:config>-->

    <aop:aspectj-autoproxy />

    <!--<bean id="criticismEngine" class="com.code4j.springinaction.springidol.CriticismEngineImpl">
        <property name="criticismPool">
            <list>
                <value>I'm not being rude, but that woa appalling.</value>
                <value>You may be the least talented person in this show.</value>
                <value>Do everyone a favor and keep your day job.</value>
            </list>
        </property>
    </bean>

    <bean class="com.code4j.springinaction.springidol.JudgeAspect" factory-method="aspectOf">
        <property name="criticismEngine" ref="criticismEngine"/>
    </bean>-->
</beans>
